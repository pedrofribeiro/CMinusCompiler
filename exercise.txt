1: (G_VET, st[2], 10)
2: (G_VAR, st[3], 1)
3: (gcd, _, _)
4: (VAR, st[5], 1)
5: (VAR, st[19], 1)
6: (VAR, st[7], 1)
7: (==, st[19], 0)
8: (IF_F, t(7), t(11))
9: (RETURN, st[5], _)
10: (GOTO, t(18), _)
11: (PARAM, st[19], _)
12: (/, st[5], st[19])
13: (*, t(12), st[19])
14: (-, st[5], t(13))
15: (PARAM, t(14), _)
16: (FNCALL, st[26], 2)
17: (RETURN, t(16), _)
18: (main, _, _)
19: (VAR, st[17], 1)
20: (VAR, st[18], 1)
21: (VET, st[19], 2)
22: (FNCALL, st[21], 0)
23: (ATRIB, st[17], t(22))
24: (FNCALL, st[21], 0)
25: (ATRIB, st[18], t(24))
26: (+, 2, 2)
27: (V_INDEX, st[19], t(26))
28: (ATRIB, t(27), 2)
29: (PARAM, st[17], _)
30: (PARAM, st[18], _)
31: (FNCALL, st[26], 2)
32: (PARAM, t(31), _)
33: (FNCALL, st[25], 1)
34: (RETURN, _, _)


===================================
ASSEMBLY.
===================================



1: SW $sp, $zr, 0 
2: ADDIU $sp, $sp, 1 
3: SW $sp, $zr, 0 
4: ADDIU $sp, $sp, 1 
5: SW $sp, $zr, 0 
6: ADDIU $sp, $sp, 1 
7: SW $sp, $zr, 0 
8: ADDIU $sp, $sp, 1 
9: SW $sp, $zr, 0 
10: ADDIU $sp, $sp, 1 
11: SW $sp, $zr, 0 
12: ADDIU $sp, $sp, 1 
13: SW $sp, $zr, 0 
14: ADDIU $sp, $sp, 1 
15: SW $sp, $zr, 0 
16: ADDIU $sp, $sp, 1 
17: SW $sp, $zr, 0 
18: ADDIU $sp, $sp, 1 
19: SW $sp, $zr, 0 
20: ADDIU $sp, $sp, 1 
21: SW $sp, $zr, 0 
22: ADDIU $sp, $sp, 1 
23: ADDIU $gp, $zr, 11 
24: MOV $fp, $sp, $zr 
25: SW $ra, $sp, 0 
26: ADDIU $sp, $sp, 1 
27: ADDIU $ap, $zr, 0 
28: ADDIU $gp, $zr, 11 
29: SW $sp, $zr, 0 
30: ADDIU $sp, $sp, 1 
31: SW $sp, $zr, 0 
32: ADDIU $sp, $sp, 1 
33: SW $sp, $zr, 0 
34: ADDIU $sp, $sp, 1 


Variables currently allocated on memory.
id (2), bp(0), ap (10)
id (3), bp(10), ap (1)
id (5), bp(12), ap (1)
id (19), bp(13), ap (1)
id (7), bp(14), ap (1)

